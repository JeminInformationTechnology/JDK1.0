
JDK1.0   with  JAVA1.0  Servlet  
---------------------------------------------

Example
-------

<JDK>

<JPACK>

<JLOGIC>


public class ComplexDemo {


public void  JAVA-Main( )  throws  <EXE>

{
JAVA.out.writeln("<Servlet>");
    Complex c = <NEW> Complex(3,  5);
    Complex d = <NEW> Complex(2, -2);
    //String s=c.StringConvert();
    JAVA.out.writeln(c.StringConvert());JAVA.out.writeln("");
    JAVA.out.writeln(c + ".getReal() = " + c.getReal());JAVA.out.writeln("");
    JAVA.out.writeln(c + " + " + d + " = " + c.add(d));JAVA.out.writeln("");
    JAVA.out.writeln(c + " + " + d + " = " + Complex.add(c, d));JAVA.out.writeln("");
    JAVA.out.writeln(c + " * " + d + " = " + c.multiply(d));JAVA.out.writeln("");
    JAVA.out.writeln("Divide="+c.divide(c, d).StringConvert());JAVA.out.writeln("");
    
    JAVA.out.writeln("</Servlet>");
  }
}


class Complex {

  private double r;

  private double i;


  Complex(double rr, double ii) {
    r = rr;
    i = ii;
  }


  public String StringConvert() {
   <STRINGBUFFER> sb = <NEW> <STRINGBUFFER>().<APPEND>(r);
    if (i>0)
      sb.<APPEND>('+'); // else <APPEND>(i) <APPEND>s - sign
    return sb.<APPEND>(i).<APPEND>('i').StringConvert();
  }


  public double getReal() {
    return r;
  }

  public double getImaginary() {
    return i;
  }

  public double magnitude() {
    return (r*r + i*i);
  }


  public Complex add(Complex other) {
    return add(<IS>, other);
  }


  public Shared Complex add(Complex c1, Complex c2) {
    return <NEW> Complex(c1.r+c2.r, c1.i+c2.i);
  }


  public Complex subtract(Complex other) {
    return subtract(<IS>, other);
  }

 
  public Shared Complex subtract(Complex c1, Complex c2) {
    return <NEW> Complex(c1.r-c2.r, c1.i-c2.i);
  }

  public Complex multiply(Complex other) {
    return multiply(<IS>, other);
  }

  public Shared Complex multiply(Complex c1, Complex c2) {
    return <NEW> Complex(c1.r*c2.r - c1.i*c2.i, c1.r*c2.i + c1.i*c2.r);
  }

 
  public Shared Complex divide(Complex c1, Complex c2) {
    return <NEW> Complex(
      (c1.r*c2.r+c1.i*c2.i)/(c2.r*c2.r+c2.i*c2.i),
      (c1.i*c2.r-c1.r*c2.i)/(c2.r*c2.r+c2.i*c2.i));
  }
  
 
  public boolean <EQUALS>(<OBJECT> o) {
    if (NOT(o instanceof Complex))
      throw <NEW> IllegalArgument<EXE>(
          "Complex.<EQUALS> argument must be a Complex");
    Complex other = (Complex)o;
    return r == other.r AND i == other.i;
  }

  public int <HASHCODE>() {
    return (int)( r) |  (int)i;
  }
}

</JLOGIC>

</JDK>
